// 0) Resolve me (Participant record)
Set(
    varMe,
    LookUp(Participants, 'Participant_Email (Primary)' = User().Email)
);

// 1) All my links, newest first
ClearCollect(
    colMyLinks,
    Sort(
        Filter(Match_Member, 'Participant_Email'.'Participant' = varMe.'Participant'), // ID↔ID
        'Created On',
        SortOrder.Descending
    )
);

// 2) My latest link
Set(varMyLastLink, If(CountRows(colMyLinks)>0, First(colMyLinks)));

// 3) The Match record of that link
Set(varMatchRef, If(!IsBlank(varMyLastLink), varMyLastLink.Match));

// 4) Other members in that same match (excl. me) — supports duos or trios
ClearCollect(
    colPartnersInLastMatch,
    If(
        !IsBlank(varMatchRef),
        Filter(
            Match_Member,
            Match = varMatchRef &&
            'Participant_Email'.'Participant' <> varMe.'Participant'   // ID↔ID
        )
    )
);

// 5) Pick a primary partner (first) and materialize the Participant record
Set(varPrimaryPartnerLink, If(CountRows(colPartnersInLastMatch)>0, First(colPartnersInLastMatch)));
Set(varPartnerRec, If(!IsBlank(varPrimaryPartnerLink), varPrimaryPartnerLink.'Participant_Email'));

// 6) Final shaped object you can bind anywhere
Set(
    varLatestMatch,
    If(
        IsBlank(varMyLastLink),
        Blank(),
        {
            MatchID: varMatchRef.'ID (Primary)',
            Match: varMatchRef,
            MyLink: varMyLastLink,
            PartnerLink: varPrimaryPartnerLink,
            Partner: varPartnerRec,                 // e.g. .Location, .Participant_Name, .Participant_Email (Primary)
            PartnerCount: CountRows(colPartnersInLastMatch)
        }
    )
);
