// A) My newest Match_Member link (ID↔ID compare)
Set(
    varMyLastLink,
    If(
        !IsBlank(varMe),
        First(
            Sort(
                Filter(
                    Match_Member,
                    'Participant_Email'.'Participant' = varMe.'Participant'   // compare GUID to GUID
                ),
                'Created On',
                SortOrder.Descending
            )
        )
    )
);

// B) The Match of that link
Set(varMatchRef, If(!IsBlank(varMyLastLink), varMyLastLink.Match));

// C) The other person’s link in the same match (duo => exactly one)
Set(
    varPartnerLink,
    If(
        !IsBlank(varMatchRef),
        LookUp(
            Match_Member,
            Match = varMatchRef &&
            'Participant_Email'.'Participant' <> varMe.'Participant'       // not me
        )
    )
);

// D) Materialize the Participant record for safe field access
Set(
    varPartner,
    If(!IsBlank(varPartnerLink), varPartnerLink.'Participant_Email')
);

// E) Final shaped object
Set(
    varLatestMatch,
    If(
        IsBlank(varMyLastLink),
        Blank(),
        {
            MatchID: varMatchRef.'ID (Primary)',
            Match: varMatchRef,
            MyLink: varMyLastLink,
            PartnerLink: varPartnerLink,
            Partner: varPartner  // -> .Location, .Participant_Name, .Participant_Email (Primary)
        }
    )
);

------------------------------------------------------------------------------------------------------------------------------


// Base: my links, newest first
ClearCollect(
    colMyLinks,
    Sort(
        Filter(
            Match_Member,                                  // or 'Match Members' if that's your data source name
            'Participant_Email'.'Participant' = varMe.'Participant'   // GUID ↔ GUID
        ),
        'Created On',
        SortOrder.Descending
    )
);

// Build a flat collection with partner + match info per row (no scoping conflicts)
ClearCollect(
    colMyMatches,
    ForAll(
        colMyLinks As L,
        With(
            {
                plink: LookUp(
                    Match_Member,                          // or 'Match Members'
                    Match = L.Match &&
                    'Participant_Email'.'Participant' <> varMe.'Participant'
                ),
                prow: If(!IsBlank(plink), plink.'Participant_Email')    // concrete Participant record
            },
            {
                CreatedOn: L.'Created On',
                MatchRow:  L.Match,
                MatchID:   L.Match.'ID (Primary)',
                // If you don't need the raw link, don't include it in the record:
                PartnerRow: prow
            }
        )
    )
);
